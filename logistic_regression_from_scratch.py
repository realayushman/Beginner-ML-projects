# -*- coding: utf-8 -*-
"""Logistic Regression from Scratch.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YXaRRKipVhnL_jq5IkdjCBwAnlfFPEJD
"""

import pandas as pd
import numpy as np

class Logisticregression():
  def __init__(self,lr=0.001,no_inter=1000):
    self.lr=lr
    self.no_inter=no_inter
  def fit(self,x,y):
    self.x=x
    self.y=y

    self.no_samples,self.no_features=self.x.shape

    self.weight=np.zeros(self.no_features)
    self.bias=0

    for i in range(self.no_inter):
      self.update()

  def update(self):
    y_pred=self.predict(self.x)
    dw=(1/self.no_samples)(np.dot((self.x.T),self.y-y_pred))
    db=(1/self.no_samples)(np.sum(self.y-y_pred))

  def sigmoid(y_pred):
    return 1/1+np.exp(-y_pred)

  def predict(self,x):
    y_pred=np.dot(x,self.weight)+self.bias
    sigma_y=self.sigmoid(self.y_pred)
    return [1 if y>0.5 else 1 for y in sigma_y]

from sklearn.datasets import load_iris

data=load_iris()

df=pd.DataFrame(data.data,columns=data.feature_names)

df['target']=data.target

df

df=df[df['target']!=2]

df

x=df.drop('target',axis=1)
y=df['target']

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)

x_train.shape,x_test.shape,y_train.shape,y_test.shape

My_Logistic_model=LogisticRegression()

My_Logistic_model.fit(x_train,y_train)

y_pred=My_Logistic_model.predict(x_test)

y_pred

y_test

